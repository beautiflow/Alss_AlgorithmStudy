"""
BOJ_1463번 
1로 만들기
시간 제한	메모리 제한	제출	정답	맞힌 사람	정답 비율
0.15 초 (하단 참고)	128 MB	238303	78870	50539	32.379%

문제

정수 X에 사용할 수 있는 연산은 다음과 같이 세 가지 이다.

1. X가 3으로 나누어 떨어지면, 3으로 나눈다.
2. X가 2로 나누어 떨어지면, 2로 나눈다.
3. 1을 뺀다.
정수 N이 주어졌을 때, 위와 같은 연산 세 개를 적절히 사용해서 1을 만들려고 한다. 연산을 사용하는 횟수의 최솟값을 출력하시오.

입력
첫째 줄에 1보다 크거나 같고, 106보다 작거나 같은 정수 N이 주어진다.

출력
첫째 줄에 연산을 하는 횟수의 최솟값을 출력한다.

예제 입력 1 
2
예제 출력 1 
1
예제 입력 2 
10
예제 출력 2 
3

힌트
10의 경우에 10 -> 9 -> 3 -> 1 로 3번 만에 만들 수 있다. """

#dp => 여러개의 하위 문제를 먼저 푼후 그 결과를 쌓아올려 주어진 문제 해결 

# 테이블 정의
# D(i)= i를 1로 만들기위해 필요한 연산 사용 횟수의 최솟값.

# 점화식
# D[12] 
# D1 ~ D11 Ok

# 3으로 나눈다. D[4] + 1
# 2으로 나눈다. D[6] + 1
# 1을 뺀다.    D[11] + 1 

# D[12] = min(D[4] + 1, D[6] +1, D[11] +1)

# D[k] = ?
# 3으로 나누어지면 3으로 나누거나 [D[k] = D[k/3] +1]
# 2로 나누어지면 2로 나누거나(D[k] = D[k/2] +1)
# 1을 빼거나 D[k] = D[k-1] + 1 , 이들 중에서 최솟값

# 초기값

n = int(input())
d = [0] * (n+1)

for i in range(2,n+1):
    d[i] = d[i - 1] + 1
    if i % 3 == 0:
        d[i] = min(d[i], d[i // 3] + 1)
    if i % 2 == 0:
        d[i] = min(d[i], d[i // 2] +1 )
print(d[n])
